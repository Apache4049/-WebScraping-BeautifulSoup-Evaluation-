{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "53b35cf0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                 Name Rating  Year\n",
      "0                     Ship of Theseus      8  2012\n",
      "1                              Iruvar    8.4  1997\n",
      "2                     Kaagaz Ke Phool    7.8  1959\n",
      "3   Lagaan: Once Upon a Time in India    8.1  2001\n",
      "4                     Pather Panchali    8.2  1955\n",
      "..                                ...    ...   ...\n",
      "95                        Apur Sansar    8.4  1959\n",
      "96                        Kanchivaram    8.2  2008\n",
      "97                    Monsoon Wedding    7.3  2001\n",
      "98                              Black    8.1  2005\n",
      "99                            Deewaar      8  1975\n",
      "\n",
      "[100 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "\n",
    "def scrape_imdb_top_100_indian_movies(url):\n",
    "    response = requests.get(url)\n",
    "    soup = BeautifulSoup(response.text, 'html.parser')\n",
    "\n",
    "    movie_data = []\n",
    "\n",
    "    # Find all the list items containing movie details\n",
    "    movies = soup.find_all('div', class_='lister-item-content')\n",
    "\n",
    "    for movie in movies:\n",
    "        name = movie.find('a').text.strip()\n",
    "        rating = movie.find('span', class_='ipl-rating-star__rating').text.strip()\n",
    "        year = movie.find('span', class_='lister-item-year').text.strip('()')\n",
    "        movie_data.append({'Name': name, 'Rating': rating, 'Year': year})\n",
    "\n",
    "    return movie_data\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    url = 'https://www.imdb.com/list/ls056092300/'\n",
    "    top_100_movies = scrape_imdb_top_100_indian_movies(url)\n",
    "\n",
    "    # Create DataFrame\n",
    "    df = pd.DataFrame(top_100_movies)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "18f3170c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
